//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player/InputAction_A.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputAction_A : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputAction_A()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputAction_A"",
    ""maps"": [
        {
            ""name"": ""InputMap_A"",
            ""id"": ""18493cd3-2363-4643-afad-87f1312b0ac9"",
            ""actions"": [
                {
                    ""name"": ""CrossKeyUp"",
                    ""type"": ""Button"",
                    ""id"": ""035b2acc-920c-44fd-9fd2-1e8087af73dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKeyDown"",
                    ""type"": ""Button"",
                    ""id"": ""715690fe-88d5-41d3-80f5-a2528f03fe53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKeyLeft"",
                    ""type"": ""Button"",
                    ""id"": ""f6cd53c5-bd95-4e62-b766-3ab7c47ae604"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrossKeyRight"",
                    ""type"": ""Button"",
                    ""id"": ""c7f7eb23-fc32-4bc0-b7c6-d3bebd982dc6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""PC"",
                    ""id"": ""ab1d8422-2036-4378-a674-ede9464856ed"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""35a10d47-d790-4155-a90d-a891a563c9b5"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a7e8f690-3545-4859-9850-741a2db5fa20"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""JoyStick"",
                    ""id"": ""fb86e054-9465-4cf2-9d74-9d842630d3bb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""afe776be-815b-4db6-bd89-98896edf21dc"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PC"",
                    ""id"": ""05a6f3b7-ff1a-4d3b-84dd-5361b9217aef"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""255bf7ff-5f93-4fee-b812-c09c6bad3881"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""58f07208-0422-4a22-bb5f-2eac027be5ff"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""JoyStick"",
                    ""id"": ""13c45770-99f1-4b93-91e4-800df559daf1"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c8325f07-18d7-43e0-b02c-fe8785a5b12a"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PC"",
                    ""id"": ""48a9a40d-4ee8-484f-95cd-91282a6204a6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f895ba08-f37a-4fc5-8c74-364948793ebf"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""be988848-942d-4462-8c96-3d23f95f166b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""JoyStick"",
                    ""id"": ""63091b82-3126-49da-8e38-c84ca2c1cbac"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""840d9c50-2e1c-4abb-8a06-4a752b246ae0"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PC"",
                    ""id"": ""e8f44bea-05ad-4417-90d6-af2ed78a4a95"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c4823bde-c87c-47ab-9f5e-4ede358c380f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d419b99a-26e3-4386-b097-f6367d9fd1f8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""JoyStick"",
                    ""id"": ""c0211151-74fc-4c0a-a6f2-f49a03a7bcda"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d4b2ac2e-55e2-4bf8-ad4b-4db5e2d7a11e"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrossKeyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InputMap_A
        m_InputMap_A = asset.FindActionMap("InputMap_A", throwIfNotFound: true);
        m_InputMap_A_CrossKeyUp = m_InputMap_A.FindAction("CrossKeyUp", throwIfNotFound: true);
        m_InputMap_A_CrossKeyDown = m_InputMap_A.FindAction("CrossKeyDown", throwIfNotFound: true);
        m_InputMap_A_CrossKeyLeft = m_InputMap_A.FindAction("CrossKeyLeft", throwIfNotFound: true);
        m_InputMap_A_CrossKeyRight = m_InputMap_A.FindAction("CrossKeyRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InputMap_A
    private readonly InputActionMap m_InputMap_A;
    private IInputMap_AActions m_InputMap_AActionsCallbackInterface;
    private readonly InputAction m_InputMap_A_CrossKeyUp;
    private readonly InputAction m_InputMap_A_CrossKeyDown;
    private readonly InputAction m_InputMap_A_CrossKeyLeft;
    private readonly InputAction m_InputMap_A_CrossKeyRight;
    public struct InputMap_AActions
    {
        private @InputAction_A m_Wrapper;
        public InputMap_AActions(@InputAction_A wrapper) { m_Wrapper = wrapper; }
        public InputAction @CrossKeyUp => m_Wrapper.m_InputMap_A_CrossKeyUp;
        public InputAction @CrossKeyDown => m_Wrapper.m_InputMap_A_CrossKeyDown;
        public InputAction @CrossKeyLeft => m_Wrapper.m_InputMap_A_CrossKeyLeft;
        public InputAction @CrossKeyRight => m_Wrapper.m_InputMap_A_CrossKeyRight;
        public InputActionMap Get() { return m_Wrapper.m_InputMap_A; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputMap_AActions set) { return set.Get(); }
        public void SetCallbacks(IInputMap_AActions instance)
        {
            if (m_Wrapper.m_InputMap_AActionsCallbackInterface != null)
            {
                @CrossKeyUp.started -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyUp;
                @CrossKeyUp.performed -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyUp;
                @CrossKeyUp.canceled -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyUp;
                @CrossKeyDown.started -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyDown;
                @CrossKeyDown.performed -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyDown;
                @CrossKeyDown.canceled -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyDown;
                @CrossKeyLeft.started -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyLeft;
                @CrossKeyLeft.performed -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyLeft;
                @CrossKeyLeft.canceled -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyLeft;
                @CrossKeyRight.started -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyRight;
                @CrossKeyRight.performed -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyRight;
                @CrossKeyRight.canceled -= m_Wrapper.m_InputMap_AActionsCallbackInterface.OnCrossKeyRight;
            }
            m_Wrapper.m_InputMap_AActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CrossKeyUp.started += instance.OnCrossKeyUp;
                @CrossKeyUp.performed += instance.OnCrossKeyUp;
                @CrossKeyUp.canceled += instance.OnCrossKeyUp;
                @CrossKeyDown.started += instance.OnCrossKeyDown;
                @CrossKeyDown.performed += instance.OnCrossKeyDown;
                @CrossKeyDown.canceled += instance.OnCrossKeyDown;
                @CrossKeyLeft.started += instance.OnCrossKeyLeft;
                @CrossKeyLeft.performed += instance.OnCrossKeyLeft;
                @CrossKeyLeft.canceled += instance.OnCrossKeyLeft;
                @CrossKeyRight.started += instance.OnCrossKeyRight;
                @CrossKeyRight.performed += instance.OnCrossKeyRight;
                @CrossKeyRight.canceled += instance.OnCrossKeyRight;
            }
        }
    }
    public InputMap_AActions @InputMap_A => new InputMap_AActions(this);
    public interface IInputMap_AActions
    {
        void OnCrossKeyUp(InputAction.CallbackContext context);
        void OnCrossKeyDown(InputAction.CallbackContext context);
        void OnCrossKeyLeft(InputAction.CallbackContext context);
        void OnCrossKeyRight(InputAction.CallbackContext context);
    }
}
